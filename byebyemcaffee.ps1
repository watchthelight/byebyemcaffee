$ErrorActionPreference='SilentlyContinue';$id=[Security.Principal.WindowsIdentity]::GetCurrent();$p=New-Object Security.Principal.WindowsPrincipal($id);if(-not $p.IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)){exit 1};try{$null=(Get-Command winget -ErrorAction Stop).Source;$targets=@('McAfee','LiveSafe','WebAdvisor','SiteAdvisor','Safe Connect','True Key','Security Scan');foreach($t in $targets){winget uninstall --accept-package-agreements --silent --query $t 2>$null|Out-Null}}catch{};$svcNames=Get-Service|?{$_.Name -match '^(mf|mfe|mcafee)' -or $_.DisplayName -match 'McAfee|WebAdvisor|SiteAdvisor'}|Select-Object -ExpandProperty Name -Unique;foreach($s in $svcNames){try{Stop-Service -Name $s -Force}catch{};try{Set-Service -Name $s -StartupType Disabled}catch{}};$procNames='mfemms','mfecanary','mfevtps','mfeann','mctray','mcshield','macompatsvc','mfefire','mfefirek','mfewc','webadvisor';foreach($q in $procNames){Get-Process $q -ErrorAction SilentlyContinue|Stop-Process -Force};$uninstallRoots=@('HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall','HKLM:\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall');$match='McAfee|LiveSafe|WebAdvisor|SiteAdvisor|Safe Connect|True Key|Security Scan';foreach($root in $uninstallRoots){if(Test-Path $root){Get-ChildItem $root|%{$dn=(gp $_.PsPath -Name DisplayName -ErrorAction SilentlyContinue).DisplayName;if($dn -and ($dn -match $match)){$us=(gp $_.PsPath -Name UninstallString -ErrorAction SilentlyContinue).UninstallString;if($us){try{if($us -match 'msiexec'){$args=$us -replace '/I','/X';if($args -notmatch '/X'){$args+=' /X'};if($args -notmatch '/qn'){$args+=' /qn /norestart'};Start-Process msiexec.exe -ArgumentList ($args.Replace('msiexec','')) -Wait}else{if($us.StartsWith('"')){$first=$us.IndexOf('"',1);$exe=$us.Substring(1,$first-1);$rest=$us.Substring($first+1).Trim()}else{$sp=$us.Split(' ',2);$exe=$sp[0];if($sp.Count -ge 2){$rest=$sp[1]}else{$rest=''}};if($rest -notmatch '/quiet|/s|/S|/qn'){$rest+=' /quiet /norestart'};Start-Process -FilePath $exe -ArgumentList $rest -Wait}}catch{}}}}}};Get-ScheduledTask|?{$_.TaskName -match 'McAfee|WebAdvisor|SiteAdvisor|True.*Key' -or $_.TaskPath -match 'McAfee|WebAdvisor'}|%{try{Unregister-ScheduledTask -TaskName $_.TaskName -TaskPath $_.TaskPath -Confirm:$false}catch{}};$svcKeys=Get-ChildItem 'HKLM:\SYSTEM\CurrentControlSet\Services'|?{$_.PSChildName -match '^(mfe|mcafee|mfefire|mfewfpk|mfevtp)'};foreach($k in $svcKeys){try{sc.exe stop $($k.PSChildName)|Out-Null}catch{};try{sc.exe delete $($k.PSChildName)|Out-Null}catch{};try{Remove-Item -Path $k.PSPath -Recurse -Force}catch{}};$folders=@("$env:ProgramFiles\McAfee","$env:ProgramFiles (x86)\McAfee","$env:ProgramData\McAfee","$env:ProgramData\McAfee.com","$env:LOCALAPPDATA\McAfee","$env:APPDATA\McAfee");foreach($f in $folders){if(Test-Path $f){try{takeown /F $f /R /D Y|Out-Null;icacls $f /grant administrators:F /T|Out-Null;Remove-Item $f -Recurse -Force}catch{}}};$regKeys=@('HKLM:\SOFTWARE\McAfee','HKLM:\SOFTWARE\WOW6432Node\McAfee','HKCU:\Software\McAfee','HKCU:\Software\McAfee.com');foreach($rk in $regKeys){if(Test-Path $rk){try{Remove-Item $rk -Recurse -Force}catch{}}};try{Get-NetFirewallRule -ErrorAction SilentlyContinue|?{$_.DisplayName -match 'McAfee|WebAdvisor|SiteAdvisor'}|Remove-NetFirewallRule}catch{};try{netsh winsock reset|Out-Null;netsh advfirewall reset|Out-Null}catch{};Write-Host 'REBOOT NOW to finish purge.'
